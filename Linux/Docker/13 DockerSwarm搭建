生产中使用集群，DockerSwarm，在多个主机上面创建镜像
docker cpmpose：是在单个主机上面创建多个镜像。一个node可能多个任务
节点：节点和虚拟机，一个docker主机上有很多主机（master管理node），maste和master之间使用的是raft算法

<p style="font-size:16px;">这是一个段落。</p>
初始化： docker swarm init      查看节点信息： docker node ls
节点添加为swarm：docker swarm join --token SWMTKN-1-4j3e02kjf1tv7r8r5ww69t51s8o3av8a0f3qtulhecyjdxxqwq-eak3523e036m1nxerg2k7higo 172.27.173.253:2377
节点添加为manager： docker swarm join --token SWMTKN-1-4j3e02kjf1tv7r8r5ww69t51s8o3av8a0f3qtulhecyjdxxqwq-8qc2me0w8hz0eycfu0nw30qkg 172.27.173.253:2377
退出当前的swarm（关闭swarm模式）：docker swarm leave        docker node rm -f ID（当前节点强制退群）

设置节点自动锁定：docker swarm update -autolock=true 会出现密钥
设置节点解锁（出现宕机之后重新连接）： docker swarm unlock
节点升级：docker node promote  节点ID
节点降级: docker node demote 节点ID
节点删除：docker node rm 节点ID
swarm自动锁定：在manager集群中，raft日志维护了一致性，节点间通过manager通信的方式维护了自己raft日志，通过tls加密，用于加密和解密的密钥存储在docker内存中，如果进行开关机就会丢失

swarm节点安全问题：PKI，swarm使用tls鉴权，加密，
  docker执行docker swarm init的时候，指定当前节点为mabager节点，会生成ca证书和一对密钥，同时还会生成两个token，一个用于worlk节点一个用于manager节点，，每个token‘包含ca证书和diget和随机密钥，
当有节点加入的时候，通过命令加上随机密钥保证安全性。
1.解析token获得证书Digest和随机密钥
2.生成ID
3.使用随机密钥加密ID
4.ID铭文和ID密文+角色+证书Disgest形成请求
  一旦节点加入了就通过，节点之间的通信使用，先提交ID建立连接，保存节点地址和ID。发送证书对方节点与接收到的证书进行验证，使用随机密钥加密发送的数据，数据明文+密文形成请求数据。对方使用随机密钥解密
信息密文，对比明文和解密之后的数据验证是否安全

ca证书轮换：ca证书默认是90天更换一次的，

manager集群容灾机制：
  热备容灾；swarm的manager节点集群使用热备的方式提升集群的容灾能力，在manager集群中只有一个处于leader状态，用于完成swarm节点的管理，其他的节点只负责选举。
  冷备容灾：三个机器中，一个机器在开启，其他机器关闭当这个机器当即之后，其他的机器才会选举
  
manager：集群的leader选举采用raft算法，得票半数就可以，官方推荐使用奇数个的节点

