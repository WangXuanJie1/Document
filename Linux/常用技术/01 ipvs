docker_gwbridg网络基础信息：
ipvs：负载均衡
IPVS（IP Virtual Server）是 Linux 内核中的一个内核模块，它提供了一种在负载均衡器上配置和管理虚拟服务器的方式。IPVS 可以通过不同的负载均衡算法分发流量，从而实现对多个后端服务器的负载均衡和高可用性。
高性能：IPVS 可以快速地分发流量，从而提升应用的性能。
稳定性：IPVS 提供了对后端服务器的健康检查和自动故障转移机制，从而提高了应用的可用性和稳定性。
灵活性：IPVS 支持多种负载均衡算法，包括轮训、加权轮训、最小连接数等，可以根据不同的应用场景进行配置。
IPVS 可以在软件负载均衡器和硬件负载均衡器中都使用。如果您需要搭建一个高性能、高可用性的负载均衡系统，可以考虑使用 IPVS。


# Ubuntu/Debian                             # CentOS/RHEL
sudo apt-get install ipvsadm                sudo yum install ipvsadm
sudo ipvsadm --list

ipvsadm：IPVS 的命令行工具。
--add-service：添加一个新的服务。
--name myservice：为该服务指定名称为 myservice。
--protocol TCP：该服务使用 TCP 协议。
--scheduler rr：使用轮询算法进行负载均衡。其他的可选算法包括加权轮询、最小连接数、最少响应时间等。
--port 80：监听服务端口号为 80。
--real-server 192.168.0.101:80：添加一个真实服务器，其中 192.168.0.101 是该服务器的 IP 地址，:80 表示该服务器的服务端口号为 80。
--real-server 192.168.0.102:80：同上，再添加一台真实服务器。
--real-server 192.168.0.103:80：同上，再添加一台真实服务器。
这个命令的作用是在当前机器上配置一个名为 myservice 的 HTTP 负载均衡服务，监听 80 端口，并将请求以轮询的方式分发到三个真实服务器上（分别为 192.168.0.101、192.168.0.102 和 192.168.0.103）。当客户端向该负载均衡服务发起请求时，根据指定的轮询算法将请求分发到其中一个真实服务器上处理，并将响应传回给客户端。


