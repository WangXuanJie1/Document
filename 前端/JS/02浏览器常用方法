浏览器端的函数：
alert()函数：用于在浏览器上面弹框输出
前端常用的浏览器函数有很多，以下列举一些比较常见的：

1. document.querySelector() / document.querySelectorAll()

这两个函数用于在文档中查找元素。querySelector() 返回匹配指定CSS选择器的第一个元素，而querySelectorAll() 则返回匹配指定CSS选择器的所有元素。

2. addEventListener() / removeEventListener()

这两个函数用于添加或删除事件处理函数。addEventListener() 可以为指定对象添加一个事件监听器，removeEventListener() 可以从指定对象中删除已添加的事件监听器。

3. setTimeout() / clearTimeout() / setInterval() / clearInterval()

这四个函数用于设置或清除定时器。setTimeout() 和 setInterval() 分别用于延迟执行和重复执行一段代码，而 clearTimeout() 和 clearInterval() 分别用于取消已经设置的定时器。

4. localStorage.setItem() / localStorage.getItem() / localStorage.removeItem()

这三个函数用于在浏览器中存储数据。localStorage 是 Web Storage API 中的一种，提供了一个简单的键值对存储接口，setItem() 可以添加一个新条目，getItem() 可以获取一个特定的条目的值，removeItem() 可以删除一个特定的条目。

5. fetch() / XMLHttpRequest()

这两个函数用于在浏览器中发送HTTP请求。fetch() 是一种比较新的API，提供了一种更现代的方式来进行网络请求。而XMLHttpRequest() 是一种传统的方法，但它仍然被广泛使用。

6. console.log() / console.error() / console.warn()

这三个函数用于在控制台中打印信息，方便调试和记录日志。

7. requestAnimationFrame() / cancelAnimationFrame()

这两个函数用于实现流畅的动画效果。requestAnimationFrame() 会在下一次浏览器渲染时调用指定的回调函数，而cancelAnimationFrame() 可以取消请求的动画帧。

8. history.pushState() / history.replaceState() / window.onpopstate

这些函数用于在浏览器中处理历史记录。history.pushState() 和 history.replaceState() 可以添加或修改浏览器历史记录，window.onpopstate 可以监听浏览器历史记录的变化。

以上是一些比较常见的浏览器函数，当然还有很多其他的函数可以用于不同的场景。
